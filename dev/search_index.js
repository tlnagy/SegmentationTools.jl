var documenterSearchIndex = {"docs":
[{"location":"#Segment-cells-with-Julia-1","page":"Segment cells with Julia","title":"Segment cells with Julia","text":"","category":"section"},{"location":"#","page":"Segment cells with Julia","title":"Segment cells with Julia","text":"Welcome to SegmentationTools.jl! This is a random collection of functions that I've implemented for segmenting single cells from microscopy images.","category":"page"},{"location":"#","page":"Segment cells with Julia","title":"Segment cells with Julia","text":"CurrentModule=SegmentationTools","category":"page"},{"location":"#Flow-1","page":"Segment cells with Julia","title":"Flow","text":"","category":"section"},{"location":"#","page":"Segment cells with Julia","title":"Segment cells with Julia","text":"The general procedure follows the following format:","category":"page"},{"location":"#","page":"Segment cells with Julia","title":"Segment cells with Julia","text":"Segmentation -> Linking -> Analysis","category":"page"},{"location":"#Segmentation-1","page":"Segment cells with Julia","title":"Segmentation","text":"","category":"section"},{"location":"#","page":"Segment cells with Julia","title":"Segment cells with Julia","text":"SegmentationTools.segment_cells","category":"page"},{"location":"#SegmentationTools.segment_cells","page":"Segment cells with Julia","title":"SegmentationTools.segment_cells","text":"segment_cells(img, seed_channel, segment_channel, maskfunc)\n\n\n\n\n\n","category":"function"},{"location":"#Linking-1","page":"Segment cells with Julia","title":"Linking","text":"","category":"section"},{"location":"#","page":"Segment cells with Julia","title":"Segment cells with Julia","text":"SegmentationTools.build_tp_df","category":"page"},{"location":"#SegmentationTools.build_tp_df","page":"Segment cells with Julia","title":"SegmentationTools.build_tp_df","text":"build_tp_df(img, segments, signal_channel)\n\nBuild a DataFrames.DataFrame that is compatible with trackpys link_df function. Needs to be converted to a Pandas.DataFrame before passing\n\n\n\n\n\n","category":"function"},{"location":"#","page":"Segment cells with Julia","title":"Segment cells with Julia","text":"I generally use it like so:","category":"page"},{"location":"#","page":"Segment cells with Julia","title":"Segment cells with Julia","text":"particles = SegmentationTools.build_tp_df(img1, segments, :EPI_mNG);\nusing PyCall\ntp = pyimport(\"trackpy\")\n\nimport Pandas\n# convert particles to a Pandas DataFrame and call trackpy\nt = tp.link_df(Pandas.DataFrame(particles), 5);\nlinked = DataFrame(Pandas.DataFrame(t)); # convert back to Julian dataframe","category":"page"},{"location":"#Analysis-and-Plotting-1","page":"Segment cells with Julia","title":"Analysis and Plotting","text":"","category":"section"},{"location":"#","page":"Segment cells with Julia","title":"Segment cells with Julia","text":"SegmentationTools.create_cell_grid","category":"page"},{"location":"#SegmentationTools.create_cell_grid","page":"Segment cells with Julia","title":"SegmentationTools.create_cell_grid","text":"r   createcellgrid(img, tracks; win) -> grid\n\nGiven a xyt image and set of tracks, creates a grid of all tracked cells with the cells centered in their grid location. Helps to quickly diagnose weird cell segmentation behavior.\n\n\n\n\n\n","category":"function"},{"location":"#Miscellaneous-1","page":"Segment cells with Julia","title":"Miscellaneous","text":"","category":"section"},{"location":"#","page":"Segment cells with Julia","title":"Segment cells with Julia","text":"SegmentationTools.flatfield_correct\nSegmentationTools.get_background_means","category":"page"},{"location":"#SegmentationTools.flatfield_correct","page":"Segment cells with Julia","title":"SegmentationTools.flatfield_correct","text":"flatfield_correct(img, axis, darkfield, flatfield)\n\nFlatfield correct img. This function subtracts the darkfield, clamps the output to positive values, divides by the flatfield, and then rescales and rebuilds the original image perserving the properties and axes.\n\nFor example, to correct along the DAPI channel:\n\nflatfield_correct(img[Axis{:channel}(:EPI_DAPI)], darkfield, flatfield_dapi)\n\n\n\n\n\n","category":"function"},{"location":"#SegmentationTools.get_background_means","page":"Segment cells with Julia","title":"SegmentationTools.get_background_means","text":"get_background_means(img, seeds, dist)\n\nComputes the average signal of the background area, which is defined as areas in img that are a distance dist away from the true values in seeds for each slice in time.\n\nExample:\n\na = img[Axis{:position}(2), Axis{:channel}(:EPImNG)].data b = img[Axis{:position}(2), Axis{:channel}(:EPIBFP)].data .> 0.01 getbackgroundmeans(a, b)\n\n\n\n\n\n","category":"function"}]
}
